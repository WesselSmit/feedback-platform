(window.webpackJsonp = window.webpackJsonp || []).push([['login'], {
  '1ae8': function (t, e, n) {
    n('5697');
  },
  '28ba': function (t, e, n) {
    n('d198');
  },
  '2b30': function (t, e, n) {
    n('533b');
  },
  '2c9f': function (t, e, n) {
    n.r(e); const i = n('7a23'); const c = { class: 'base' }; function o(t, e, n, o, s, a) { const r = Object(i.u)('Documentation'); const u = Object(i.u)('Sidebar'); return Object(i.p)(), Object(i.d)('main', c, [Object(i.g)(r, { content: a.documentation }, null, 8, ['content']), Object(i.g)(u, { content: { documentation: a.documentation, sidebar: a.sidebar }, stepIndex: t.stepIndex }, null, 8, ['content', 'stepIndex'])]); } const s = n('5530'); const a = {
      documentation: {
        menuOptions: ['home'], title: 'Boxing heavyweight championships', explanation: 'The history of the different boxing heavyweight championships through the years.', questions: ['Is it clear what everything means?', 'Is the image in the center too distracting?'], limits: 'The legend', visualisation: 'boxing',
      },
      sidebar: {
        hasProgressBar: !0,
        steps: [{ isCentered: !0, content: { confirmInstructions: { title: 'Read the documentation', body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sociis adipiscing feugiat tincidunt vestibulum nibh cum dui. Et morbi enim urna vestibulum. ' } }, navigation: [{ label: 'Done', action: 'nextStep' }] }, {
          popUp: {
            title: 'Explanation design critique', body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sociis adipiscing feugiat tincidunt vestibulum nibh cum dui. Et morbi enim urna vestibulum. Suspendisse ligula augue et odio mauris pharetra justo. Venenatis cursus pulvinar nunc nunc pretium ac eros in.', tipHeading: 'Tips and pointers for giving feedback ', tips: [{ type: 'question', label: 'Lorem ipsum' }, { type: 'question', label: 'Lorem ipsum' }, { type: 'limit', label: 'Lorem ipsum' }, { type: 'normal', label: 'Lorem ipsum' }], buttonLabel: 'Done',
          },
          tabs: [{ label: 'Give feedback', value: 'give' }, { label: 'View feedback', value: 'view' }],
          content: { readInstructions: { title: 'Give Negative feedback', body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sociis adipiscing feugiat tincidunt.', legend: [{ type: 'question', label: 'Do give feedback' }, { type: 'limit', label: "Don't give feedback" }] }, feedbackHelper: { title: 'Negative feedback tips', sections: { zero: { body: '', tips: ['Lorem ipsum', 'Lorem ipsum', 'Lorem ipsum', 'Lorem ipsum'] }, interactive: { body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sociis adipiscing feugiat tincidunt.', tips: [{ heading: 'Lorem ipsum dolor sit amet, consectetur adipiscing.', detail: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sociis adipiscing feugiat tincidunt vestibulum nibh cum dui. Et morbi enim urna vestibulum. Suspendisse ligula augue et odio mauris pharetra justo. Venenatis cursus pulvinar nunc nunc pretium ac eros in.' }, { heading: 'Lorem ipsum dolor sit amet, consectetur adipiscing.', detail: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sociis adipiscing feugiat tincidunt vestibulum nibh cum dui. Et morbi enim urna vestibulum. Suspendisse ligula augue et odio mauris pharetra justo. Venenatis cursus pulvinar nunc nunc pretium ac eros in.' }, { heading: 'Lorem ipsum dolor sit amet, consectetur adipiscing.', detail: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sociis adipiscing feugiat tincidunt vestibulum nibh cum dui. Et morbi enim urna vestibulum. Suspendisse ligula augue et odio mauris pharetra justo. Venenatis cursus pulvinar nunc nunc pretium ac eros in.' }] } } }, feedbackInput: !0 },
          navigation: [{ label: 'Previous', action: 'previousStep' }, { label: 'Next', hasOutline: !0, action: 'nextStep' }],
        }, { tabs: [{ label: 'Give feedback', value: 'give' }, { label: 'View feedback', value: 'view' }], content: { confirmInstructions: { title: 'Answer the feedback questions', body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sociis adipiscing feugiat tincidunt.' } }, navigation: [{ label: 'Previous', action: 'previousStep' }, { label: 'Next', hasOutline: !0, action: 'nextStep' }] }, { tabs: [{ label: 'Give feedback', value: 'give' }, { label: 'View feedback', value: 'view' }], content: { confirmInstructions: { title: 'Give positive feedback', body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sociis adipiscing feugiat tincidunt.' } }, navigation: [{ label: 'Previous', action: 'previousStep' }, { label: 'Next', hasOutline: !0, action: { target: 'Done' } }] }],
      },
    }; const r = { class: 'documentation' }; const u = { class: 'documentation__inner' }; const b = Object(i.g)('h2', { class: 'documentation__subheading' }, 'Explanation', -1); const l = Object(i.g)('h2', { class: 'documentation__subheading' }, 'Do give feedback', -1); const d = { class: 'documentation__question-list' }; const p = { class: 'documentation__icon-container' }; const O = Object(i.g)('h2', { class: 'documentation__subheading' }, "Don't give feedback", -1); const j = { class: 'documentation__limits' }; const g = { class: 'documentation__icon-container' }; function m(t, e, n, c, o, s) { const a = Object(i.u)('Menu'); const m = Object(i.u)('QuestionIcon'); const f = Object(i.u)('LimitIcon'); const h = Object(i.u)('Visualisation'); return Object(i.p)(), Object(i.d)('section', r, [Object(i.g)(a), Object(i.g)('div', u, [Object(i.g)('h1', null, Object(i.w)(s.title), 1), b, Object(i.g)('p', null, Object(i.w)(s.explanation), 1), l, Object(i.g)('ul', d, [(Object(i.p)(!0), Object(i.d)(i.a, null, Object(i.t)(s.questions, ((t, e) => (Object(i.p)(), Object(i.d)('li', { key: e, class: 'documentation__question' }, [Object(i.g)('span', p, [Object(i.g)(m, { class: 'documentation__icon documentation__icon--question' })]), Object(i.f)(` ${Object(i.w)(t)}`, 1)])))), 128))]), O, Object(i.g)('p', j, [Object(i.g)('span', g, [Object(i.g)(f, { class: 'documentation__icon documentation__icon--limit' })]), Object(i.f)(` ${Object(i.w)(s.limits)}`, 1)])]), Object(i.g)(h, { title: s.title, visualisation: s.visualisation }, null, 8, ['title', 'visualisation'])]); } const f = { width: '10', height: '10' }; const h = Object(i.g)('path', { d: 'M10 1.007L8.993 0 5 3.993 1.007 0 0 1.007 3.993 5 0 8.993 1.007 10 5 6.007 8.993 10 10 8.993 6.007 5 10 1.007z' }, null, -1); function v(t, e) { return Object(i.p)(), Object(i.d)('svg', f, [h]); } const _ = {}; _.render = v; const k = _; const w = { width: '14', height: '11' }; const y = Object(i.g)('path', { d: 'M4.319 8.174L1.097 4.952 0 6.042l4.319 4.319 9.271-9.272L12.5 0 4.32 8.174z' }, null, -1); function I(t, e) { return Object(i.p)(), Object(i.d)('svg', w, [y]); } const C = {}; C.render = I; const x = C; const L = { class: 'menu' }; function U(t, e, n, c, o, s) { return Object(i.p)(), Object(i.d)('section', L); } const P = { name: 'Menu' }; n('3958'); P.render = U; const S = P; const F = { class: 'visualisation' }; const T = { class: 'visualisation__title-container' }; const D = { class: 'visualisation__image-container' }; function E(t, e, c, o, s, a) { return Object(i.p)(), Object(i.d)('section', F, [Object(i.g)('div', T, [Object(i.g)('h2', null, Object(i.w)(c.title), 1)]), Object(i.g)('div', D, [Object(i.g)('img', { src: n('adfc')('./'.concat(c.visualisation, '.png')), class: 'visualisation__image' }, null, 8, ['src'])])]); } const q = { name: 'Visualisation', props: ['title', 'visualisation'] }; n('2b30'); q.render = E; const z = q; const M = {
      name: 'Documentation',
      components: {
        Menu: S, Visualisation: z, LimitIcon: k, QuestionIcon: x,
      },
      props: ['content'],
      computed: {
        title() { return this.content.title; }, explanation() { return this.content.explanation; }, questions() { return this.content.questions; }, limits() { return this.content.limits; }, visualisation() { return this.content.visualisation; },
      },
    }; n('83fb'); M.render = m; const V = M; const R = { class: 'sidebar' }; function H(t, e, n, c, o, s) {
      const a = Object(i.u)('ProgressBar'); const r = Object(i.u)('Tabs'); const u = Object(i.u)('ConfirmInstructions'); const b = Object(i.u)('ReadInstructions'); const l = Object(i.u)('FeedbackHelper'); const d = Object(i.u)('FeedbackInput'); const p = Object(i.u)('NavigationButtons'); const O = Object(i.u)('PopUp'); return Object(i.p)(), Object(i.d)(i.a, null, [Object(i.g)('section', R, [s.hasProgressBar ? (Object(i.p)(), Object(i.d)(a, { key: 0, total: s.totalSteps, index: n.stepIndex }, null, 8, ['total', 'index'])) : Object(i.e)('', !0), s.tabs ? (Object(i.p)(), Object(i.d)(r, { key: 1, tabs: s.tabs }, null, 8, ['tabs'])) : Object(i.e)('', !0), Object(i.g)('div', { class: ['sidebar__inner', { 'sidebar__inner--centered': s.isCentered }] }, [(Object(i.p)(!0), Object(i.d)(i.a, null, Object(i.t)(s.sections, ((t, e) => (Object(i.p)(), Object(i.d)('div', { key: t, class: { 'sidebar__inner-wrapper--grow-bottom': e === 'feedbackInput' } }, [e === 'confirmInstructions' ? (Object(i.p)(), Object(i.d)(u, { key: 0, content: t, class: 'sidebar__section' }, null, 8, ['content'])) : Object(i.e)('', !0), e === 'readInstructions' ? (Object(i.p)(), Object(i.d)(b, {
        key: 1, content: t, legendData: s.legendData, class: 'sidebar__section',
      }, null, 8, ['content', 'legendData'])) : Object(i.e)('', !0), e === 'feedbackHelper' ? (Object(i.p)(), Object(i.d)(l, { key: 2, content: t, class: 'sidebar__section' }, null, 8, ['content'])) : Object(i.e)('', !0), e === 'feedbackInput' ? (Object(i.p)(), Object(i.d)(d, { key: 3, content: t, class: ['sidebar__section', { 'sidebar__section--no-padding-bottom': e === 'feedbackInput' }] }, null, 8, ['content', 'class'])) : Object(i.e)('', !0)], 2)))), 128)), s.navigation && s.isCentered ? (Object(i.p)(), Object(i.d)(p, { key: 0, buttons: s.navigation }, null, 8, ['buttons'])) : Object(i.e)('', !0)], 2), s.navigation && !s.isCentered ? (Object(i.p)(), Object(i.d)(p, { key: 2, buttons: s.navigation }, null, 8, ['buttons'])) : Object(i.e)('', !0)]), s.popUp && t.showPopUp ? (Object(i.p)(), Object(i.d)(O, { key: 0, content: s.popUp }, null, 8, ['content'])) : Object(i.e)('', !0)], 64);
    } const N = n('5502'); const B = { class: 'progress-bar' }; const G = { class: 'progress-bar__container' }; function A(t, e, n, c, o, s) { return Object(i.p)(), Object(i.d)('section', B, [Object(i.g)('div', G, [Object(i.g)('div', { class: 'progress-bar__value', style: s.progress }, null, 4)])]); } const $ = { name: 'ProgressBar', props: ['total', 'index'], computed: { progress() { const t = this.index / this.total * 100; return { width: ''.concat(t, '%') }; } } }; n('28ba'); $.render = A; const Q = $; const Z = { class: 'tabs' }; function J(t, e, n, c, o, s) { return Object(i.p)(), Object(i.d)('section', Z, [(Object(i.p)(!0), Object(i.d)(i.a, null, Object(i.t)(n.tabs, ((e, n) => (Object(i.p)(), Object(i.d)('div', { key: n, class: ['tabs__tab', { 'tabs__tab--active': e.value === t.activeTab }], onClick(t) { return s.handleClick(e.value, n); } }, Object(i.w)(e.label), 11, ['onClick'])))), 128)), Object(i.g)('div', { class: ['tabs__indicator', s.tabIndicatorPosition] }, null, 2)]); } const X = {
      name: 'Tabs', props: ['tabs'], data() { return { activeTabIndex: 0 }; }, computed: Object(s.a)(Object(s.a)({}, Object(N.c)('sidebar', { activeTab: 'activeTab' })), {}, { tabIndicatorPosition() { const t = this.activeTabIndex === 0 ? 'left' : 'right'; return 'tabs__indicator--'.concat(t); } }), methods: { handleClick(t, e) { this.activeTabIndex = e, this.activeTab !== t && this.$store.dispatch('sidebar/updateActiveTab', t); } },
    }; n('3f38'); X.render = J; const Y = X; const K = { class: 'confirm-instructions' }; const W = { key: 0 }; const tt = { key: 1 }; function et(t, e, n, c, o, s) { return Object(i.p)(), Object(i.d)('section', K, [s.title ? (Object(i.p)(), Object(i.d)('h1', W, Object(i.w)(s.title), 1)) : Object(i.e)('', !0), s.body ? (Object(i.p)(), Object(i.d)('p', tt, Object(i.w)(s.body), 1)) : Object(i.e)('', !0)]); } const nt = { name: 'ConfirmInstructions', props: ['content'], computed: { title() { return this.content.title; }, body() { return this.content.body; } } }; nt.render = et; const it = nt; const ct = { key: 0, class: 'read-instructions__header-title' }; const ot = { key: 0, class: 'read-instructions__legend' }; const st = { class: 'read-instructions__legend-icon-container' }; const at = { key: 1, class: 'read-instructions__points' }; const rt = { class: 'read-instructions__points-icon-container' }; const ut = { key: 0, class: 'read-instructions__points-label' }; const bt = { class: 'read-instructions__points-icon-container' }; function lt(t, e, n, c, o, s) { const a = Object(i.u)('ToggleIcon'); const r = Object(i.u)('QuestionIcon'); const u = Object(i.u)('LimitIcon'); return Object(i.p)(), Object(i.d)('section', { class: ['read-instructions', { 'read-instructions--collapsed': o.isCollapsed }] }, [Object(i.g)('div', { class: 'read-instructions__header', onClick: e[1] || (e[1] = function (t) { return s.handleClick(); }) }, [s.title ? (Object(i.p)(), Object(i.d)('h1', ct, Object(i.w)(s.title), 1)) : Object(i.e)('', !0), Object(i.g)(a, { class: 'read-instructions__header-toggle' })]), s.body ? (Object(i.p)(), Object(i.d)('p', { key: 0, class: ['read-instructions__body', { 'read-instructions__body--no-margin-bottom': !s.legend }] }, Object(i.w)(s.body), 3)) : Object(i.e)('', !0), Object(i.C)(Object(i.g)('div', null, [s.legend ? (Object(i.p)(), Object(i.d)('ul', ot, [(Object(i.p)(!0), Object(i.d)(i.a, null, Object(i.t)(s.legend, ((t) => (Object(i.p)(), Object(i.d)('li', { key: t, class: 'read-instructions__legend-label' }, [Object(i.g)('span', st, [t.type === 'question' ? (Object(i.p)(), Object(i.d)(r, { key: 0, class: 'read-instructions__legend-icon read-instructions__legend-icon--question' })) : Object(i.e)('', !0), t.type === 'limit' ? (Object(i.p)(), Object(i.d)(u, { key: 1, class: 'read-instructions__legend-icon read-instructions__legend-icon--limit' })) : Object(i.e)('', !0)]), Object(i.f)(` ${Object(i.w)(t.label)}`, 1)])))), 128))])) : Object(i.e)('', !0), s.legend ? (Object(i.p)(), Object(i.d)('ul', at, [(Object(i.p)(!0), Object(i.d)(i.a, null, Object(i.t)(s.questions, ((t) => (Object(i.p)(), Object(i.d)('li', { key: t, class: 'read-instructions__points-label' }, [Object(i.g)('span', rt, [Object(i.g)(r, { class: 'read-instructions__points-icon read-instructions__points-icon--question' })]), Object(i.f)(` ${Object(i.w)(t)}`, 1)])))), 128)), s.limits ? (Object(i.p)(), Object(i.d)('li', ut, [Object(i.g)('span', bt, [Object(i.g)(u, { class: 'read-instructions__points-icon read-instructions__points-icon--limit' })]), Object(i.f)(` ${Object(i.w)(s.limits)}`, 1)])) : Object(i.e)('', !0)])) : Object(i.e)('', !0)], 512), [[i.A, !o.isCollapsed]])], 2); } const dt = Object(i.g)('svg', { width: '12', height: '8' }, [Object(i.g)('path', { d: 'M1.41 0L6 4.58 10.59 0 12 1.41l-6 6-6-6L1.41 0z' })], -1); function pt(t, e) { return Object(i.p)(), Object(i.d)('div', null, [dt]); } const Ot = {}; Ot.render = pt; const jt = Ot; const gt = {
      name: 'ReadInstructions',
      components: { ToggleIcon: jt, LimitIcon: k, QuestionIcon: x },
      props: ['content', 'legendData'],
      data() { return { isCollapsed: !1 }; },
      computed: {
        title() { return this.content.title; }, body() { return this.content.body; }, legend() { return this.content.legend; }, limits() { return this.legendData.limits; }, questions() { return this.legendData.questions; },
      },
      methods: { handleClick() { this.isCollapsed = !this.isCollapsed; } },
    }; n('1ae8'); gt.render = lt; const mt = gt; const ft = { class: 'feedback-helper' }; const ht = { key: 0 }; const vt = { key: 1 }; const _t = { key: 2 }; const kt = { key: 3, class: 'feedback-helper__tips-list' }; const wt = { class: 'feedback-helper__tips-tip-icon-container' }; const yt = { class: 'feedback-helper__tips-tip-detail-container' }; function It(t, e, n, c, o, s) { const a = Object(i.u)('ToggleIcon'); return Object(i.p)(), Object(i.d)('section', ft, [s.title ? (Object(i.p)(), Object(i.d)('h1', ht, Object(i.w)(s.title), 1)) : Object(i.e)('', !0), s.body ? (Object(i.p)(), Object(i.d)('p', vt, Object(i.w)(s.body), 1)) : Object(i.e)('', !0), s.zeroTips ? Object(i.C)((Object(i.p)(), Object(i.d)('ul', _t, [(Object(i.p)(!0), Object(i.d)(i.a, null, Object(i.t)(s.zeroTips, ((t) => (Object(i.p)(), Object(i.d)('li', { key: t }, Object(i.w)(t), 1)))), 128))], 512)), [[i.A, t.showFeedbackHelperZero]]) : Object(i.e)('', !0), s.interactiveTips ? Object(i.C)((Object(i.p)(), Object(i.d)('ul', kt, [(Object(i.p)(!0), Object(i.d)(i.a, null, Object(i.t)(s.interactiveTips, ((t, e) => (Object(i.p)(), Object(i.d)('li', { key: t, class: ['feedback-helper__tips-tip', { 'feedback-helper__tips-tip--expanded': o.activeTipIndex === e }], onClick(t) { return s.handleClick(e); } }, [Object(i.g)('span', wt, [Object(i.g)(a, { class: 'feedback-helper__tips-tip-icon' })]), Object(i.g)('span', yt, [Object(i.f)(`${Object(i.w)(t.heading)} `, 1), Object(i.C)(Object(i.g)('span', { class: 'feedback-helper__tips-tip-detail' }, Object(i.w)(t.detail), 513), [[i.A, o.activeTipIndex === e]])])], 10, ['onClick'])))), 128))], 512)), [[i.A, !t.showFeedbackHelperZero]]) : Object(i.e)('', !0)]); } const Ct = {
      name: 'feedbackHelper',
      components: { ToggleIcon: jt },
      props: ['content'],
      data() { return { activeTipIndex: null }; },
      computed: Object(s.a)(Object(s.a)({}, Object(N.c)('sidebar', { showFeedbackHelperZero: 'showFeedbackHelperZero' })), {}, {
        title() { return this.content.title; }, body() { const t = this.showFeedbackHelperZero ? 'zero' : 'interactive'; return this.content.sections[t].body; }, zeroTips() { return this.content.sections.zero.tips; }, interactiveTips() { return this.content.sections.interactive.tips; },
      }),
      methods: { handleClick(t) { this.activeTipIndex = this.activeTipIndex === t ? null : t; } },
    }; n('f462'); Ct.render = It; const xt = Ct; const Lt = { class: 'feedback-input' }; const Ut = { class: 'feedback-input__container' }; const Pt = { class: 'feedback-input__actions' }; function St(t, e, n, c, o, s) {
      const a = Object(i.u)('MarkerIcon'); const r = Object(i.u)('ImageIcon'); return Object(i.p)(), Object(i.d)('section', Lt, [Object(i.g)('div', Ut, [Object(i.C)(Object(i.g)('textarea', {
        rows: '7', placeholder: 'Lorem ipsum', 'onUpdate:modelValue': e[1] || (e[1] = function (t) { return o.textInput = t; }), class: 'feedback-input__input',
      }, null, 512), [[i.z, o.textInput, void 0, { trim: !0 }]]), Object(i.g)('div', Pt, [Object(i.g)('button', { class: 'feedback-input__action feedback-input__action--marker', onClick: e[2] || (e[2] = function (t) { return s.addMarkers(); }) }, [Object(i.g)(a, { class: 'feedback-input__action-icon' }), Object(i.f)(` ${Object(i.w)(s.markerLabel)}`, 1)]), Object(i.g)('button', { class: 'feedback-input__action feedback-input__action--image', onClick: e[3] || (e[3] = function (t) { return s.addImage(); }) }, [Object(i.g)(r, { class: 'feedback-input__action-icon' }), Object(i.f)(` ${Object(i.w)(s.imageLabel)}`, 1)]), Object(i.g)('button', { class: 'feedback-input__action feedback-input__action--comment', onClick: e[4] || (e[4] = function (t) { return s.comment(); }) }, 'Comment')])])]);
    } const Ft = { width: '15', height: '18' }; const Tt = Object(i.g)('path', { d: 'M12.6 7.38c0-3.267-2.385-5.58-5.4-5.58-3.015 0-5.4 2.313-5.4 5.58 0 2.106 1.755 4.896 5.4 8.226 3.645-3.33 5.4-6.12 5.4-8.226zM7.2 0c3.78 0 7.2 2.898 7.2 7.38 0 2.988-2.403 6.525-7.2 10.62C2.403 13.905 0 10.368 0 7.38 0 2.898 3.42 0 7.2 0z' }, null, -1); const Dt = Object(i.g)('path', { d: 'M7.2 9a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5z' }, null, -1); function Et(t, e) { return Object(i.p)(), Object(i.d)('svg', Ft, [Tt, Dt]); } const qt = {}; qt.render = Et; const zt = qt; const Mt = { width: '18', height: '18' }; const Vt = Object(i.g)('path', { d: 'M16 2v14H2V2h14zm0-2H2C.9 0 0 .9 0 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2zm-4.86 8.86l-3 3.87L6 10.14 3 14h12l-3.86-5.14z' }, null, -1); function Rt(t, e) { return Object(i.p)(), Object(i.d)('svg', Mt, [Vt]); } const Ht = {}; Ht.render = Rt; const Nt = Ht; const Bt = {
      name: 'FeedbackInput', components: { MarkerIcon: zt, ImageIcon: Nt }, data() { return { textInput: '', labels: { marker: 'Add markers', image: 'Add image' } }; }, computed: { markerLabel() { return this.labels.marker; }, imageLabel() { return this.labels.image; } }, methods: { addMarkers() {}, addImage() {}, comment() {} },
    }; n('9200'); Bt.render = St; const Gt = Bt; function At(t, e, n, c, o, s) { return Object(i.p)(), Object(i.d)('section', { class: ['navigation-buttons', { 'navigation-buttons--multiple': s.hasMultiple }] }, [(Object(i.p)(!0), Object(i.d)(i.a, null, Object(i.t)(n.buttons, ((t, e) => (Object(i.p)(), Object(i.d)('button', { key: e, class: ['navigation-buttons__button', { 'navigation-buttons__button--outline': t.hasOutline }], onClick(e) { return s.handleClick(t); } }, Object(i.w)(t.label), 11, ['onClick'])))), 128))], 2); } const $t = {
      name: 'ButtonBox', props: ['buttons'], computed: { hasMultiple() { return this.buttons.length > 1; } }, methods: { handleClick(t) { const e = t.action; e.hasOwnProperty('target') ? this.$router.push(e.target) : e !== 'previousStep' && e !== 'nextStep' || this.$store.dispatch('sidebar/updateStepIndex', e); } },
    }; n('eb86'); $t.render = At; const Qt = $t; const Zt = { class: 'pop-up' }; const Jt = { class: 'pop-up__inner' }; const Xt = { key: 0 }; const Yt = { class: 'pop-up__tip-list' }; const Kt = { key: 0, class: 'pop-up__tip-icon-container' }; function Wt(t, e, n, c, o, s) { const a = Object(i.u)('QuestionIcon'); const r = Object(i.u)('LimitIcon'); return Object(i.p)(), Object(i.d)('section', Zt, [Object(i.g)('div', Jt, [Object(i.g)('h1', null, Object(i.w)(s.title), 1), Object(i.g)('p', { class: ['pop-up__body', { 'pop-up__body--extra-margin-bottom': s.hasTipsSection }] }, Object(i.w)(s.body), 3), s.hasTipsSection ? (Object(i.p)(), Object(i.d)('div', Xt, [Object(i.g)('h2', null, Object(i.w)(s.tipHeading), 1), Object(i.g)('ul', Yt, [(Object(i.p)(!0), Object(i.d)(i.a, null, Object(i.t)(s.tips, ((t) => (Object(i.p)(), Object(i.d)('li', { key: t, class: ['pop-up__tip', 'pop-up__tip--'.concat(t.type)] }, [t.type !== 'normal' ? (Object(i.p)(), Object(i.d)('span', Kt, [t.type === 'question' ? (Object(i.p)(), Object(i.d)(a, { key: 0, class: 'pop-up__tip-icon--question' })) : Object(i.e)('', !0), t.type === 'limit' ? (Object(i.p)(), Object(i.d)(r, { key: 1, class: 'pop-up__tip-icon--limit' })) : Object(i.e)('', !0)])) : Object(i.e)('', !0), Object(i.f)(` ${Object(i.w)(t.label)}`, 1)], 2)))), 128))])])) : Object(i.e)('', !0), Object(i.g)('button', { class: 'pop-up__button', onClick: e[1] || (e[1] = function (e) { return s.handleClick(t.button); }) }, Object(i.w)(s.buttonLabel), 1)])]); } const te = {
      name: 'PopUp',
      components: { LimitIcon: k, QuestionIcon: x },
      props: ['content'],
      computed: {
        title() { return this.content.title; }, body() { return this.content.body; }, hasTipsSection() { let t; return this.content.tipHeading && ((t = this.content.tips) === null || void 0 === t ? void 0 : t.length) > 0; }, tipHeading() { return this.content.tipHeading; }, tips() { return this.content.tips; }, buttonLabel() { return this.content.buttonLabel; },
      },
      methods: { handleClick() { this.$store.dispatch('sidebar/updateShowPopUp'); } },
    }; n('ec91'); te.render = Wt; const ee = te; const ne = {
      name: 'Sidebar',
      components: {
        ProgressBar: Q, Tabs: Y, ConfirmInstructions: it, ReadInstructions: mt, FeedbackHelper: xt, FeedbackInput: Gt, NavigationButtons: Qt, PopUp: ee,
      },
      props: ['content', 'stepIndex'],
      computed: Object(s.a)(Object(s.a)({}, Object(N.c)('sidebar', { showPopUp: 'showPopUp' })), {}, {
        step() { return this.content.sidebar.steps[this.stepIndex - 1]; }, popUp() { return this.step.popUp; }, legendData() { return { limits: this.content.documentation.limits, questions: this.content.documentation.questions }; }, hasProgressBar() { return this.content.sidebar.hasProgressBar; }, totalSteps() { return this.content.sidebar.steps.length; }, tabs() { return this.step.tabs; }, sections() { return this.step.content; }, isCentered() { return this.step.isCentered; }, navigation() { return this.step.navigation; },
      }),
    }; n('cf7b'); ne.render = H; const ie = ne; const ce = { name: 'Give', components: { Documentation: V, Sidebar: ie }, computed: Object(s.a)(Object(s.a)({}, Object(N.c)('sidebar', { stepIndex: 'stepIndex' })), {}, { documentation() { return a.documentation; }, sidebar() { return a.sidebar; } }) }; n('b415'); ce.render = o; e.default = ce;
  },
  3958(t, e, n) {
    n('683c');
  },
  '3e74': function (t, e, n) {
    n.r(e); const i = n('7a23'); function c(t, e, n, c, o, s) { return Object(i.p)(), Object(i.d)('h1', null, 'You finished the demo!'); } const o = { name: 'Done' }; o.render = c; e.default = o;
  },
  '3f38': function (t, e, n) {
    n('5fb7');
  },
  4234(t, e, n) {},
  '510e': function (t, e, n) {},
  '531b': function (t, e, n) { t.exports = `${n.p}img/climate.791e5747.png`; },
  '533b': function (t, e, n) {},
  5697(t, e, n) {},
  '5c90': function (t, e, n) {},
  '5fb7': function (t, e, n) {},
  '683c': function (t, e, n) {},
  '83fb': function (t, e, n) {
    n('d8bd');
  },
  9200(t, e, n) {
    n('c2d2');
  },
  '92c7': function (t, e, n) {},
  a55b(t, e, n) {
    n.r(e); n('b0c0'); const i = n('7a23'); const c = { key: 0 }; const o = { key: 1 }; const s = Object(i.g)('h1', null, 'Login', -1); const a = Object(i.g)('label', { for: 'loginEmail' }, 'Email', -1); const r = Object(i.g)('label', { for: 'loginPassword' }, 'Password', -1); const u = Object(i.g)('h1', null, 'Sign up', -1); const b = Object(i.g)('label', { for: 'signUpName' }, 'Name', -1); const l = Object(i.g)('label', { for: 'signUpGroup' }, "I'm part of group", -1); const d = Object(i.g)('label', { for: 'signUpEmail' }, 'Email', -1); const p = Object(i.g)('label', { for: 'signUpPassword' }, 'Password', -1); function O(t, e, n, O, j, g) {
      const m = Object(i.u)('PasswordReset'); return Object(i.p)(), Object(i.d)('section', null, [this.userError ? (Object(i.p)(), Object(i.d)('h1', c, Object(i.w)(this.userError.message), 1)) : Object(i.e)('', !0), this.groupError ? (Object(i.p)(), Object(i.d)('h1', o, Object(i.w)(this.groupError.message), 1)) : Object(i.e)('', !0), j.showPasswordReset ? (Object(i.p)(), Object(i.d)(m, { key: 2, onClose: e[1] || (e[1] = function (t) { return g.togglePasswordReset(); }) })) : Object(i.e)('', !0), j.showPasswordReset ? Object(i.e)('', !0) : (Object(i.p)(), Object(i.d)('div', { key: 3, class: { 'login-form': j.showLoginForm } }, [j.showLoginForm ? (Object(i.p)(), Object(i.d)('form', { key: 0, onSubmit: e[7] || (e[7] = Object(i.D)((() => {}), ['prevent'])) }, [Object(i.g)('fieldset', null, [s, a, Object(i.C)(Object(i.g)('input', {
        'onUpdate:modelValue': e[2] || (e[2] = function (t) { return j.loginForm.email = t; }), type: 'text', placeholder: 'you@email.com', id: 'loginEmail',
      }, null, 512), [[i.z, j.loginForm.email, void 0, { trim: !0 }]]), r, Object(i.C)(Object(i.g)('input', {
        'onUpdate:modelValue': e[3] || (e[3] = function (t) { return j.loginForm.password = t; }), type: 'password', placeholder: '******', id: 'loginPassword',
      }, null, 512), [[i.z, j.loginForm.password, void 0, { trim: !0 }]]), Object(i.g)('a', { onClick: e[4] || (e[4] = function (t) { return g.togglePasswordReset(); }) }, 'Forgot password'), Object(i.g)('button', { onClick: e[5] || (e[5] = function (t) { return g.login(); }) }, 'Log In'), Object(i.g)('button', { onClick: e[6] || (e[6] = function (t) { return g.toggleForm(); }) }, 'Create an account')])], 32)) : (Object(i.p)(), Object(i.d)('form', { key: 1, onSubmit: e[14] || (e[14] = Object(i.D)((() => {}), ['prevent'])) }, [Object(i.g)('fieldset', null, [u, b, Object(i.C)(Object(i.g)('input', {
        'onUpdate:modelValue': e[8] || (e[8] = function (t) { return j.signUpForm.name = t; }), type: 'text', placeholder: 'John Doe', id: 'signUpName',
      }, null, 512), [[i.z, j.signUpForm.name, void 0, { trim: !0 }]]), l, Object(i.C)(Object(i.g)('select', { 'onUpdate:modelValue': e[9] || (e[9] = function (t) { return j.signUpForm.group = t; }), id: 'signUpGroup' }, [(Object(i.p)(!0), Object(i.d)(i.a, null, Object(i.t)(t.groupNames, ((t) => (Object(i.p)(), Object(i.d)('option', { key: t, value: t }, Object(i.w)(t), 9, ['value'])))), 128))], 512), [[i.y, j.signUpForm.group]]), d, Object(i.C)(Object(i.g)('input', {
        'onUpdate:modelValue': e[10] || (e[10] = function (t) { return j.signUpForm.email = t; }), type: 'text', placeholder: 'you@email.com', id: 'signUpEmail',
      }, null, 512), [[i.z, j.signUpForm.email, void 0, { trim: !0 }]]), p, Object(i.C)(Object(i.g)('input', {
        'onUpdate:modelValue': e[11] || (e[11] = function (t) { return j.signUpForm.password = t; }), type: 'password', placeholder: 'min length is 6', id: 'signUpPassword',
      }, null, 512), [[i.z, j.signUpForm.password, void 0, { trim: !0 }]]), Object(i.g)('button', { onClick: e[12] || (e[12] = function (t) { return g.signup(); }), class: 'button' }, 'Sign Up'), Object(i.g)('button', { onClick: e[13] || (e[13] = function (t) { return g.toggleForm(); }) }, 'Go to login')])], 32))], 2))]);
    } const j = n('5530'); const g = { class: 'modal' }; const m = { class: 'modal-content' }; const f = Object(i.g)('h3', null, 'Reset Password', -1); const h = { key: 0 }; const v = Object(i.g)('p', null, 'Enter your email to reset your password', -1); const _ = { key: 0, class: 'error' }; const k = { key: 1 }; function w(t, e, n, c, o, s) { return Object(i.p)(), Object(i.d)('div', g, [Object(i.g)('div', m, [Object(i.g)('div', { onClick: e[1] || (e[1] = function (e) { return t.$emit('close'); }), class: 'close' }, 'X'), f, o.showSuccess ? (Object(i.p)(), Object(i.d)('p', k, 'Success! Check your email for a reset link.')) : (Object(i.p)(), Object(i.d)('div', h, [v, Object(i.g)('form', { onSubmit: e[3] || (e[3] = Object(i.D)((() => {}), ['prevent'])) }, [Object(i.C)(Object(i.g)('input', { 'onUpdate:modelValue': e[2] || (e[2] = function (t) { return o.email = t; }), type: 'email', placeholder: 'you@email.com' }, null, 512), [[i.z, o.email, void 0, { trim: !0 }]])], 32), o.errorMsg !== '' ? (Object(i.p)(), Object(i.d)('p', _, Object(i.w)(o.errorMsg), 1)) : Object(i.e)('', !0), Object(i.g)('button', { onClick: e[4] || (e[4] = function (t) { return s.resetPassword(); }), class: 'button' }, 'Reset')]))])]); }n('96cf'); const y = n('1da1'); const I = n('dc59'); const C = { data() { return { email: '', showSuccess: !1, errorMsg: '' }; }, methods: { resetPassword() { const t = this; return Object(y.a)(regeneratorRuntime.mark((function e() { return regeneratorRuntime.wrap(((e) => { while (1) switch (e.prev = e.next) { case 0: return e.prev = 0, e.next = 3, I.a.sendPasswordResetEmail(t.email); case 3: t.showSuccess = !0, e.next = 9; break; case 6: e.prev = 6, e.t0 = e.catch(0), t.errorMsg = e.t0.message; case 9: case 'end': return e.stop(); } }), e, null, [[0, 6]]); })))(); } } }; C.render = w; const x = C; const L = n('5502'); const U = {
      components: { PasswordReset: x },
      data() {
        return {
          showLoginForm: !0,
          showPasswordReset: !1,
          loginForm: { email: '', password: '' },
          signUpForm: {
            name: '', group: '', email: '', password: '',
          },
        };
      },
      computed: Object(j.a)(Object(j.a)({}, Object(L.c)('group', { groupNames: 'groupNames', groupError: 'error' })), Object(L.c)('user', { user: 'user', userError: 'error' })),
      methods: Object(j.a)(Object(j.a)({}, Object(L.b)('group', { fetchGroups: 'fetchGroups' })), {}, {
        toggleForm() { this.showLoginForm = !this.showLoginForm; }, togglePasswordReset() { this.showPasswordReset = !this.showPasswordReset; }, signup() { this.$store.dispatch('user/signUp', this.signUpForm); }, login() { this.$store.dispatch('user/login', this.loginForm); },
      }),
      created() { this.fetchGroups(); },
    }; U.render = O; e.default = U;
  },
  adfc(t, e, n) { const i = { './boxing.png': 'bc10', './climate.png': '531b', './twitter.png': 'b61b' }; function c(t) { const e = o(t); return n(e); } function o(t) { if (!n.o(i, t)) { const e = new Error(`Cannot find module '${t}'`); throw e.code = 'MODULE_NOT_FOUND', e; } return i[t]; }c.keys = function () { return Object.keys(i); }, c.resolve = o, t.exports = c, c.id = 'adfc'; },
  b415(t, e, n) {
    n('510e');
  },
  b61b(t, e, n) { t.exports = `${n.p}img/twitter.ab4f9357.png`; },
  bc10(t, e, n) { t.exports = `${n.p}img/boxing.b43fe688.png`; },
  c18c(t, e, n) {},
  c2d2(t, e, n) {},
  cf7b(t, e, n) {
    n('c18c');
  },
  d198(t, e, n) {},
  d8bd(t, e, n) {},
  eb86(t, e, n) {
    n('92c7');
  },
  ec91(t, e, n) {
    n('4234');
  },
  f462(t, e, n) {
    n('5c90');
  },
}]);
// # sourceMappingURL=login.8cfb14bd.js.map
